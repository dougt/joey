/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Joey Mozilla Project.
 *
 * The Initial Developer of the Original Code is
 * Doug Turner <dougt@meer.net>.
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

[scriptable, uuid(d8395123-3f49-4fa9-acf0-023b58c061c7)]
interface mocoJoeyListener : nsISupports
{
  void onStatusChange(in string name, 
                      in string uri,
                      in long status);
};

[scriptable, uuid(22258500-4F86-4C4A-9A6D-B01EF98D0265)]
interface mocoJoey : nsISupports
{
  
  void setLoginInfo();

  void setListener(in mocoJoeyListener listener);

  void uploadData(in string name,
                  in string title,
                  in string uri,
                  in string data,
                  in PRUint32 size,
                  in string type,
                  in string uuid);
                  
  void uploadBinaryData(in string name,
                        in string title,
                        in string uri,
                        [array, size_is(size)] in PRInt32 data,
                        in PRUint32 size,
                        in string type,
                        in string uuid);    

  void uploadFile(in string name,
                  in string title,
                  in string uri,
                  in nsIFile file,
                  in string type,
                  in string uuid);    
};
